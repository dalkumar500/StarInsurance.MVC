@model StarInsurance.Models.ClaimCreate

@{
    ViewBag.Title = "Create";
}

<h2 class="text-center mt-4">Create</h2>
<div class="d-flex justify-content-center text-center">


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">

                <div class="col-md-10">
                    @Html.EditorFor(model => model.InsurancePolicyId, new { htmlAttributes = new { @class = "form-control", placeholder = "Insurance Id" } })
                    @Html.ValidationMessageFor(model => model.InsurancePolicyId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

                <div class="col-md-10">
                    @Html.EditorFor(model => model.ClaimType, new { htmlAttributes = new { @class = "form-control", placeholder = "ClaimType" } })
                    @Html.ValidationMessageFor(model => model.ClaimType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Description" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

                <div class="col-md-10">
                    @Html.EditorFor(model => model.ClaimAmount, new { htmlAttributes = new { @class = "form-control", placeholder = "ClaimAmount" } })
                    @Html.ValidationMessageFor(model => model.ClaimAmount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateOfIncident, new { htmlAttributes = new { @class = "form-control", placeholder = "DateOfIncident" } })
                    @Html.ValidationMessageFor(model => model.DateOfIncident, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateOfClaim, new { htmlAttributes = new { @class = "form-control", placeholder = "DateOfClaim" } })
                    @Html.ValidationMessageFor(model => model.DateOfClaim, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsValid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsValid)
                        @Html.ValidationMessageFor(model => model.IsValid, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-outline-light" />
                </div>
            </div>
        </div>
       
    }
    </div>

    <div>
        @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "text-light" })
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
